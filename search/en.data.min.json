[{"id":0,"href":"/AM2R-Modding-Wiki/useful-links/","title":"Useful Links","parent":"AM2R Modding Wiki","content":"","description":""},{"id":1,"href":"/AM2R-Modding-Wiki/publishing-mod/glenn/","title":"Port to other Operating Systems","parent":"Publishing your Mod","content":"Now that you have your Raw Mod for your Operating System, you should port your mod and create Raw Mods for other Operating Systems as well. This step is optional but recommended in order for you to make your mod available for more people.\nLuckily, there is a tool by Miepee that simplifies that process, called Glenn.\nThis tool only works with GameMaker VM builds, which essentially means, that only if you created your mod via a YYC build with GameMaker Studio 1.4, you are unable to use it. In the case you have done that, see instructions further down on what you can do.\nThe project\u0026rsquo;s Readme should sufficiently explain its usage, but here\u0026rsquo;s a quick rundown nonetheless.\nMake sure that you don\u0026rsquo;t have any functionality that\u0026rsquo;s OS specific! This includes using \\ instead of /, writing to the asset folder / working_dir, make sure that every file you read is in lowercase etc. The Readme goes into full detail on there.\nIf you encounter anything in your Mod that\u0026rsquo;s OS specific, you need to modify your Mod accordingly.\nImportant if you plan to port for Mac: Make sure that all references to immersion_play_effect, immersion_stop and font_replace are removed or are behind an OS check as they\u0026rsquo;ll otherwise crash the game! For vanilla AM2R, only the alarms in oDrillSeq1 and oDrillSeq2 are affected with immersion_stop (you can see the exact patch you can do in the Pull Request here), all other functions (immersion_play_effect and font_replace) are already behind an OS check.\nDownload the latest version of Glenn. Choose the GUI version for your OS.\nExtract the zip to a folder of your liking. I\u0026rsquo;ll call that folder \u0026ldquo;ExtractedTool\u0026rdquo; for future reference.\nExecute the tool in your ExtractedTool folder, feed your Raw Mod zip and select the checkboxes accordingly.\nCheck Windows / Linux / Android/ Mac if you want to have a Raw Mod Zip created for that OS Check the Requires Internet option if your mod needs internet in any way (i.e. multiplayer) and you have Android checked. Check the Use custom save location option if you want your Android mod to use a custom save location. If you don\u0026rsquo;t include this for Android, users who will install your mod will need to uninstall the normal Community Updates, which can cause their saves to get deleted. Select the icon and splash images you want for your mod.\nClick on the \u0026ldquo;Port\u0026rdquo; button\nAfter that, there will now be a Raw Zip Versions for the OS\u0026rsquo; you selected in the ExtractedTool folder.\nIf you\u0026rsquo;re a GM:S 1.4 User, and you compiled your mods using YYC, you have two options:\nManage to YYC compile it for all platforms that you want to redistribute (this can be very painful, especially for Mac and Android).\nCompile your Mod as VM, make sure that nothing broke in the process, and then use Glenn from above.\n","description":"Now that you have your Raw Mod for your Operating System, you should port your mod and create Raw Mods for other Operating Systems as well. This step is optional but recommended in order for you to make your mod available for more people.\nLuckily, there is a tool by Miepee that simplifies that process, called Glenn.\nThis tool only works with GameMaker VM builds, which essentially means, that only if you created your mod via a YYC build with GameMaker Studio 1."},{"id":2,"href":"/AM2R-Modding-Wiki/publishing-mod/atomic/","title":"Make your Mod AM2RLauncher compatible","parent":"Publishing your Mod","content":"In order to make your Mod AM2RLauncher compatible, you will need to use Atomic.\nThe instructions are as follows:\nDownload the latest version of the Atomic.\nChoose the version for your OS.\nExtract the zip to a folder of your liking. I\u0026rsquo;ll call that folder \u0026ldquo;ExtractedPacker\u0026rdquo; for future reference.\nExecute the tool in your ExtractedPacker folder, and fill everything out accordingly.\nThe name, author, version and mod notes will all be shown in the AM2RLauncher. The mod name is used to differentiate different mods Check (and select accordingly) the Uses custom save directory option, if your mod (on Desktop) uses a different save directory than %localappdata%/AM2R Check the Uses custom music option, if your mod uses different music than the AM2R Community Updates Check (and select accordingly) the Supports [OS] if you have a Raw Mod zip for that OS available Click the Load 1.1 button and select your AM2R 1.1 file\nClick on the Create Mod Packages button, and select the places you want your AM2RLauncher compatible mods to be saved at.\nNow you will have AM2RLauncher compatible Mods. I\u0026rsquo;ll call these \u0026ldquo;AM2RLauncher Mod\u0026rdquo; for future reference.\n","description":"In order to make your Mod AM2RLauncher compatible, you will need to use Atomic.\nThe instructions are as follows:\nDownload the latest version of the Atomic.\nChoose the version for your OS.\nExtract the zip to a folder of your liking. I\u0026rsquo;ll call that folder \u0026ldquo;ExtractedPacker\u0026rdquo; for future reference.\nExecute the tool in your ExtractedPacker folder, and fill everything out accordingly.\nThe name, author, version and mod notes will all be shown in the AM2RLauncher."},{"id":3,"href":"/AM2R-Modding-Wiki/publishing-mod/upload/","title":"Upload your Mod","parent":"Publishing your Mod","content":"TODO: use hugo image resources for these, instead of gist references\nNow that you have your AM2RLauncher Mods, you\u0026rsquo;ll need to upload these zip files somewhere publically.\nFor this it is reccomended to not upload them on Google Drive / Mega / MediaFire etc., as a) those links can die easily and b) they are not discoverable from a normal search engine.\nYou should instead use some Git-service, like GitHub or GitLab, as those are more reliable, and you\u0026rsquo;ll get other benefits from it too (like easily going back to past versions to check for bugs, a place to post changelogs, a bug tracking system etc.)\nHere, I\u0026rsquo;ll go through the process of releasing your Mod on GitHub. The process should be almost the same for GitLab, Gitea and similar. First, you need to create an account and the repository:\nCreate an Account if you haven\u0026rsquo;t yet.\nLog into the Account, click on the + icon in the upper right corner, and then click on the Create a new Repository option.\nCreate a new Repository Enter the name of your mod as the repository and a short one-two sentences description. Make sure to check the Add a Readme file option.\nYou can also change the visibility to Private here, if you intend to release mods for a selected testing team. It\u0026rsquo;s always possible to change visibility later. You don\u0026rsquo;t need to fill in a gitignore/license yet. This is covered somewhere down below in case you want to add code to your repo TODO: this thing It should look somewhat like this:\nExample of a new Repository screen Now that the repository is created, you should see a page with your readme, and some info on the right. If that is not the case, you probably missed something in the instructions above. Feel free to click at the top on Settings Tab, scroll down to the bottom, delete the repository, and try again.\nIf everything looks as expected, continue with publishing your release:\nAt the right side, right under Releases, click on the Create a new Release link.\nCreate a new Release Choose a Tag, a Release title, and a Release Description. Additionally, put your AM2RLauncher Mod(s) zips into the designated area, either via drag-n-dropping, or by clicking on the area and then selecting them.\nFor the Tag, click on Choose a tag dropdown, then type in your tag name (i.e v1.0), and then click on Create new tag on publish You can also mark releases as \u0026ldquo;Beta\u0026rdquo; essentially, by checking the Set as pre-release option A release can look somewhat like this:\nExample of a new Release screen That\u0026rsquo;s it! You have now uploaded your first Mod Release.\nIf you wish to upload a new version of your Mod, open the URL for your Mod, and then just start at Step 4.\nIf you noticed after publishing a release, that you missed something in the description or forgot to upload another asset, you are able to edit the release by clicking the edit pencil in the upper right corner:\nEdit a Release If you wish to change the name/description of your repository or the readme, you\u0026rsquo;re able to do that at any time. For the name/description you can do so from the Settings Tab at the top, for the readme you can do so from by clicking the edit pencil in the upper right corner.\n","description":"TODO: use hugo image resources for these, instead of gist references\nNow that you have your AM2RLauncher Mods, you\u0026rsquo;ll need to upload these zip files somewhere publically.\nFor this it is reccomended to not upload them on Google Drive / Mega / MediaFire etc., as a) those links can die easily and b) they are not discoverable from a normal search engine.\nYou should instead use some Git-service, like GitHub or GitLab, as those are more reliable, and you\u0026rsquo;ll get other benefits from it too (like easily going back to past versions to check for bugs, a place to post changelogs, a bug tracking system etc."},{"id":4,"href":"/AM2R-Modding-Wiki/publishing-mod/postrelease/","title":"Niceties after Release","parent":"Publishing your Mod","content":"These are a few niceties you can do after you have released your Mod to the public.\nMake a thread on the AM2R Discord Server. You probably have already done that during development, but if you haven\u0026rsquo;t, you should do it in order to see feedback/criticism/experience for your mod in an easy way.\nAdd your Mod to the Unofficial AM2R Mod List here\nIn order to do that, create an Account on GitLab (you can also login with your GitHub account), click on Readme.md, click on the Open in Web IDE button, add your mod into the file, scroll down at the bottom and insert a comment, then finally click on \u0026ldquo;Propose changes\u0026rdquo; If you don\u0026rsquo;t want to create a GitLab account, ask in the communication channels whether someone can add it for you Use the Issue tracker on GitHub/GitLab/etc. to easily track issues and feature requests.\nMake a post on the Subreddit/YouTube about your Mod.\nIf you have made a Linux release, advertize Steam Deck compatibility.\nMake it possible to install your Mod via a Termux script. This benefits people who only have an Android phone.\nUpload the code for your Mod. This is a little bit more convoluted, and will thus get its own section down below.\nPublish the Code for your Mod TODO: at one point I\u0026rsquo;ll write this\u0026hellip;\n","description":"These are a few niceties you can do after you have released your Mod to the public.\nMake a thread on the AM2R Discord Server. You probably have already done that during development, but if you haven\u0026rsquo;t, you should do it in order to see feedback/criticism/experience for your mod in an easy way.\nAdd your Mod to the Unofficial AM2R Mod List here\nIn order to do that, create an Account on GitLab (you can also login with your GitHub account), click on Readme."},{"id":5,"href":"/AM2R-Modding-Wiki/publishing-mod/","title":"Publishing your Mod","parent":"AM2R Modding Wiki","content":"The following pages will guide you through on how to upload your mod after you have finished creating it.\nPreparing Port to other Operating Systems Make your Mod AM2RLauncher compatible Upload your Mod Niceties after Release ","description":"The following pages will guide you through on how to upload your mod after you have finished creating it.\nPreparing Port to other Operating Systems Make your Mod AM2RLauncher compatible Upload your Mod Niceties after Release "},{"id":6,"href":"/AM2R-Modding-Wiki/utmt/rooms/","title":"Rooms","parent":"UndertaleModTool","content":"","description":""},{"id":7,"href":"/AM2R-Modding-Wiki/","title":"AM2R Modding Wiki","parent":"","content":"A wiki trying to be helpful in modding AM2R. For discussion, check out the Chats section.\n","description":"A wiki trying to be helpful in modding AM2R. For discussion, check out the Chats section."},{"id":8,"href":"/AM2R-Modding-Wiki/useful-links/chats/","title":"Chats","parent":"Useful Links","content":"Links to places where you can chat about modding AM2R.\nAM2R Discord The Official AM2R Discord Server. It\u0026rsquo;s also bridged with the AM2R Matrix Space.\nhttps://discord.gg/YTQnkAJ\nAM2R Matrix Space The Official AM2R Matrix Space. It\u0026rsquo;s also bridged with the AM2R Discord.\nhttps://matrix.to/#/#am2r:matrix.org\nAM2R Modding Discord The Discord server for all things modding related. Modding related inqueries will likely get faster answers here than in the AM2R Discord, as well as it being a bit more organized.\nhttps://discord.gg/Jndkzu7\nUnderminers The Discord server where GameMaker modding research is done. The contributors of UndertaleModTool and DogScepter are available there.\nhttps://discord.gg/3ESNF4QPrh\n","description":"Links to places where you can chat about modding AM2R.\nAM2R Discord The Official AM2R Discord Server. It\u0026rsquo;s also bridged with the AM2R Matrix Space.\nhttps://discord.gg/YTQnkAJ\nAM2R Matrix Space The Official AM2R Matrix Space. It\u0026rsquo;s also bridged with the AM2R Discord.\nhttps://matrix.to/#/#am2r:matrix.org\nAM2R Modding Discord The Discord server for all things modding related. Modding related inqueries will likely get faster answers here than in the AM2R Discord, as well as it being a bit more organized."},{"id":9,"href":"/AM2R-Modding-Wiki/utmt/rooms/creating-new-rooms/","title":"Making new custom rooms in AM2R with UTMT","parent":"Rooms","content":"TODO: having some more screenshots in here would be nice. Also fix some phrasing.\nPreparation: When creating a new room, the dimensions must be multiples of 320 x 240. Having different room dimensions will cause lots of troubles. Also make sure that the room\u0026rsquo;s room speed is set to 60 as that\u0026rsquo;s what AM2R runs at. Entering different values will lead to the room being slowed-down or sped up.\nOnce you have your set room size, set a background by putting bgScreenGuide in one of the background definitions by dragging and dropping it from the left. Enable the background afterwards.\nNext, click on the Views category, and then click on the first View. Set its Pos/size values to 0, 0, 320, 240, regardless of room size. Set the Port pos/size values to 0, 0, 320, 240 as well. Set Border values to 160, 160. Make sure Speed values are at -1, -1. Lastly, to make the camera follow the player, put oCamera into the Follows object box.\nYou are now ready to start building your room. On the left Filter by name... box, search for solid. There, all the solid collision blocks under the Game objects category are to be added by dragging and dropping them onto the room. For puzzles and other uses, you can also search for missile, bomb, super missile and other destroyable blocks. Keep in mind that these blocks, as well as solid blocks, are invisible and do not appear without putting tiles over them or giving them creation code.\nNow, your room\u0026rsquo;s collision and destroyable blocks are all layed out. In-game, you will see nothing in your room, but you will able to collide with the blocks and break them as usual. To give your room form, you can put tiles from the many different tilesets. Each tile is added individually, so this will be a slow process. Each unit or block that represents a tile is 16 x 16 pixels large, and can be selected manually by setting the source position and size or clicking on what tile you want, however the latter option is sometimes not as good for tilesets that aren\u0026rsquo;t limited to blocks. It is recommended to use an image editor to find the coordinates of specific points for the former option. Tiles that are a multiple of 16x16 can be selected by holding ALT while click-dragging over the tileset thumbnail in the tile\u0026rsquo;s properties. Before we get into backgrounds, you are wondering what to do with the destroyable blocks since they do not appear visible, or even the fact you cannot get into the room at all. The room requires a oGotoRoom object (from now on called \u0026ldquo;transitions\u0026rdquo;) to actually enter it from anywhere else. Breakable blocks need creation code to make them look like different blocks. You should NOT put tiles over them if your intent is to have them break. Transitions will be covered later.\nFor the breakable blocks, there are two solutions:\nAdd creation code for each of them and use tile_link(tileset,x,y) as its content. It will link the block to a tileset and will automatically use a 16 x 16 size. The x and y coordinates correspond with the top-left corner of the breakable block. Place a tile in the position where the breakable block will be, and set the depth of that tile to either -111 or -112. Now you can add breakable blocks in your room!\nFor backgrounds, you should place an oBackground object somewhere in the room. Usually they are placed in the top-left of the room. The oBackground object has create code load_bgset(value). The value is the set of backgrounds the object will use. For example, load_bgset(7) will put the Area 4 background sprites in the background. The best way to determine this is finding an oBackground object in a different room in the same area as yours or the area your prefer and copying it or its creation code to yours. Your room now has a background with parallax movement!\nTODO: above is false, you can easily check what value is used for load_bgset by checking the appropriate script, and then ctrl+clicking the number next to bgid[0] under the argument0 == value condition.\nFinally, we are up to transitions. These are the oGotoRoom objects that allow you to go to other rooms, and they take quite a bit of time to prepare to be visually appealing. Bad transitions end up with teleporting Samuses across the screen and the camera moving strangely. However, with the right knowledge, it can be done very quickly. Each transition requires a lot of number fiddling in the creation code. The essential values needed are: targetroom, direction, height, targetx, targety, camstartx, camstarty, transitionx, transitiony.\nHere\u0026rsquo;s a description of what you should assign to them:\ntargetroom = The room number of the room you are transitioning into. Entering the name of the room will automatically make UTMT convert it into its number ID. direction = A number for what direction Samus is travelling in. 0 for Right. 90 for Up. 180 for Left. 270 for Down. height = The size of the transition. Depends on direction. If the transition is going Right or Left, this number is how tall the transition is. This means the optimal location to place the transition is at the bottom of the entrance, directly on a collision block. If the direction is going Up or Down, this variable is how wide the transition is, starting from its origin (its centre) going towards the right. Optimal placement is placing this directly on the right of the leftmost wall the transition is between. targetx = The x coordinate of where Samus is in the next room you are transitioning to. targety = The y coordinate of where Samus is in the room you are transitioning to. camstartx = The x coordinate of the camera\u0026rsquo;s centre in the next room. camstarty = The y coordinate of the camera\u0026rsquo;s centre in the next room. transitionx = x coordinate of where Samus is during the transition cutscene relative to the camera\u0026rsquo;s origin. This has a range of 0-320. Do not go above or below it. transitiony = y coordinate of where Samus is during the transition cutscene relative to the camera\u0026rsquo;s origin. This has a range of 0-240. Do not go above or below it. Optimal placing for up and down transitions Optimal placing for left and right transitions At this point with at least targetroom and targetx and targety and direction set, the transition should now work.\nNext are some tips to help smoothen out the transition:\ntargetx and targety = If Samus is in the air, try use the x and y coordinates of the floor tile you want her to end up on after the cutscene. Since the floor tiles have origins on the top-left of their image, and Samus will end up on them and not in the air above them. camstartx and camstarty = After testing the transition cutscene once, I try and find the midpoint of where it is on my screen in-game in reference to any nearby tiles or objects. This will take some trial and error to get right. transitionx and transitiony = This will also take some trial and error to get right. Essentially what I do is I take the midpoint and I either subtract or add a quarter of the room size\u0026rsquo;s x and y values depending on where I want Samus to end up in during the transition before actually going through it. After going through the transition, and finding out how terribly Samus is offset, I add or subtract from the values by 16 (essentially one block) to help get closer to the preferred final destination of where Samus is during the cutscene. This is easier to understand in practice, hopefully. Congratulations! You have a functional room with transitions, collision units, tiles, background, and a camera! Feel free to add your own objects in and whatever you feel is necessary.\n","description":"TODO: having some more screenshots in here would be nice. Also fix some phrasing.\nPreparation: When creating a new room, the dimensions must be multiples of 320 x 240. Having different room dimensions will cause lots of troubles. Also make sure that the room\u0026rsquo;s room speed is set to 60 as that\u0026rsquo;s what AM2R runs at. Entering different values will lead to the room being slowed-down or sped up.\nOnce you have your set room size, set a background by putting bgScreenGuide in one of the background definitions by dragging and dropping it from the left."},{"id":10,"href":"/AM2R-Modding-Wiki/publishing-mod/prep/","title":"Preparing","parent":"Publishing your Mod","content":"If you create your mod with UndertaleModTool, then the very first step you need to do, is create a zip of all files that are necesary for your mod. The procedure usually is as follows:\nNavigate to the folder where you have your mod. The structure (On Windows) should look like this: Windows AM2R Mod folder structure (TODO: when modding on non-windows becomes more prominent, post structure on Linux/Mac/Android too)\nSelect all files in there. If there is a file called profile.xml in there, unselect it. That file is necessary for the AM2RLauncher, and including it will make your mod uninstallable.\nRight Click and select the \u0026ldquo;Create .zip\u0026rdquo; option. This option may be named differently depending on which archival software you have.\nYou now have a zip of your mod, which I\u0026rsquo;ll call \u0026ldquo;Raw Mod\u0026rdquo; for future reference. For double checking, your zip should not contain a subfolder.\nIf you create your mod with GameMaker: Studio 1.4, you can get your Raw Mod by just exporting your game in a .zip format.\n","description":"If you create your mod with UndertaleModTool, then the very first step you need to do, is create a zip of all files that are necesary for your mod. The procedure usually is as follows:\nNavigate to the folder where you have your mod. The structure (On Windows) should look like this: Windows AM2R Mod folder structure (TODO: when modding on non-windows becomes more prominent, post structure on Linux/Mac/Android too)"},{"id":11,"href":"/AM2R-Modding-Wiki/tags/","title":"Tags","parent":"AM2R Modding Wiki","content":"","description":""},{"id":12,"href":"/AM2R-Modding-Wiki/useful-links/tools/","title":"Tools","parent":"Useful Links","content":"A list of tools that are useful for AM2R Modding\nUndertaleModTool Download: https://github.com/krzys-h/UndertaleModTool/releases\nUndertaleModTool (often abbreviated as UMT or UTMT) lets you change GameMaker asset files. This is your primary modding tool.\nGlenn Download: https://github.com/Miepee/Glenn/releases\nGlenn lets you able to port your Mod to Windows, Linux, Android and Mac.\nAtomic Download: https://github.com/AM2R-Community-Developers/Atomic/releases\nAtomic makes your mods AM2RLauncher compatible, so that other people can properly install them.\nAnna Download: https://github.com/Miepee/Anna/releases\nAnna is a resource pack manager for AM2RLauncher profiles.\n","description":"A list of tools that are useful for AM2R Modding\nUndertaleModTool Download: https://github.com/krzys-h/UndertaleModTool/releases\nUndertaleModTool (often abbreviated as UMT or UTMT) lets you change GameMaker asset files. This is your primary modding tool.\nGlenn Download: https://github.com/Miepee/Glenn/releases\nGlenn lets you able to port your Mod to Windows, Linux, Android and Mac.\nAtomic Download: https://github.com/AM2R-Community-Developers/Atomic/releases\nAtomic makes your mods AM2RLauncher compatible, so that other people can properly install them.\nAnna Download: https://github.com/Miepee/Anna/releases\nAnna is a resource pack manager for AM2RLauncher profiles."},{"id":13,"href":"/AM2R-Modding-Wiki/utmt/","title":"UndertaleModTool","parent":"AM2R Modding Wiki","content":"","description":""}]